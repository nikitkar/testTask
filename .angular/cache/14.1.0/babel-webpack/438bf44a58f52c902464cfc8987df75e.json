{"ast":null,"code":"import { animate, state, style, transition, trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"ToolTip\", \"\"];\n\nfunction ToolTip_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction ToolTip_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 6);\n    i0.ɵɵelement(4, \"path\", 7)(5, \"path\", 8)(6, \"path\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ToolTip_ng_template_1_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closeToolTip());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationTriggerName\", ctx_r2.isVisibility);\n    i0.ɵɵadvance(4);\n    i0.ɵɵattribute(\"stroke\", ctx_r2.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"fill\", ctx_r2.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"fill\", ctx_r2.color);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction ToolTip_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 6);\n    i0.ɵɵelement(4, \"path\", 7)(5, \"path\", 8)(6, \"path\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ToolTip_ng_template_3_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.closeToolTip());\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@animationTriggerName\", ctx_r4.isVisibility);\n    i0.ɵɵadvance(4);\n    i0.ɵɵattribute(\"stroke\", ctx_r4.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"fill\", ctx_r4.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"fill\", ctx_r4.color);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.title);\n  }\n} // type - true: successful\n//      - false: warning\n\n\nexport let ToolTip = /*#__PURE__*/(() => {\n  class ToolTip {\n    constructor() {\n      setTimeout(() => {\n        this.isVisibility = 'close';\n      }, 16000);\n    }\n\n    closeToolTip() {\n      this.isVisibility = this.isVisibility === 'open' ? 'close' : 'open';\n    }\n\n  }\n\n  ToolTip.ɵfac = function ToolTip_Factory(t) {\n    return new (t || ToolTip)();\n  };\n\n  ToolTip.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ToolTip,\n    selectors: [[\"\", \"ToolTip\", \"\"]],\n    hostVars: 2,\n    hostBindings: function ToolTip_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"--color\", ctx.color);\n      }\n    },\n    inputs: {\n      title: \"title\",\n      color: \"color\",\n      typeToolTip: \"typeToolTip\",\n      isVisibility: \"isVisibility\"\n    },\n    attrs: _c0,\n    decls: 5,\n    vars: 3,\n    consts: [[4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"thenBlock\", \"\"], [\"elseBlock\", \"\"], [1, \"ToolTip\"], [1, \"toolTip--Body\"], [1, \"toolTip--content\"], [\"width\", \"20\", \"height\", \"20\", \"viewBox\", \"0 0 20 20\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M18.3333 9.99978C18.3333 14.6031 14.6024 18.3331 9.99993 18.3331C5.39743 18.3331 1.6666 14.6031 1.6666 9.99978C1.6666 5.39811 5.39743 1.66644 9.99993 1.66644C14.6024 1.66644 18.3333 5.39811 18.3333 9.99978\", \"stroke-width\", \"2\"], [\"d\", \"M10 11.9228C10.5799 11.9228 11.0526 11.4651 11.0526 10.9038V5.7559C11.0526 5.19453 10.5799 4.73682 10 4.73682C9.42015 4.73682 8.94737 5.19453 8.94737 5.7559V10.9038C8.94737 11.4651 9.42015 11.9228 10 11.9228Z\"], [\"d\", \"M10.0003 13.2101C9.42566 13.2101 8.95662 13.6712 8.95662 14.2367C8.95662 14.8022 9.43045 15.2632 10.0122 15.2632C10.5916 15.2632 11.0619 14.8022 11.0619 14.2367C11.0619 13.6712 10.5916 13.2101 10.0003 13.2101Z\"], [\"type\", \"button\", 1, \"close\", 3, \"click\"]],\n    template: function ToolTip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ToolTip_div_0_Template, 1, 0, \"div\", 0);\n        i0.ɵɵtemplate(1, ToolTip_ng_template_1_Template, 10, 5, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(3, ToolTip_ng_template_3_Template, 10, 5, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        const _r3 = i0.ɵɵreference(4);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.typeToolTip === true)(\"ngIfThen\", _r1)(\"ngIfElse\", _r3);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\"[_nghost-%COMP%]{--color: }.ToolTip[_ngcontent-%COMP%]{position:absolute;top:5%;right:2%;padding:16px 18px;border-radius:5px;border-left:5px solid var(--color);box-shadow:0 10px 25px #4443;transition:all .4s}.toolTip--Body[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center}.toolTip--content[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.toolTip--content[_ngcontent-%COMP%] > svg[_ngcontent-%COMP%]{margin-right:10px}.toolTip--content[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{max-width:320px;font-size:var(--regularSize);line-height:var(--regularSize__lineHeigth);color:var(--greyDark)}.close[_ngcontent-%COMP%]{display:block;width:10px;height:10px;padding:0;background:none;border:none;font-size:0;color:transparent;position:absolute;top:-10px;right:-10px;z-index:10000}.close[_ngcontent-%COMP%]:before{top:0;transform:rotate(45deg)}.close[_ngcontent-%COMP%]:after{bottom:0;transform:rotate(-45deg)}.close[_ngcontent-%COMP%]:before, .close[_ngcontent-%COMP%]:after{content:\\\"\\\";top:50%;transition:transform .2s linear}.close[_ngcontent-%COMP%]:before, .close[_ngcontent-%COMP%]:after{display:block;width:100%;height:1.5px;background-color:var(--greyDark);position:absolute;right:0}\"],\n    data: {\n      animation: [trigger('animationTriggerName', [state('open', style({\n        opacity: 1\n      })), state('close', style({\n        opacity: 0,\n        visibility: 'hidden'\n      })), transition('open <=> close', animate('.4s'))])]\n    }\n  });\n  return ToolTip;\n})();","map":null,"metadata":{},"sourceType":"module"}